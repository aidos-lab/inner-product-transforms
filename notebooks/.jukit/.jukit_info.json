{"cmd": "import torch\nfrom torch.utils.flop_counter import FlopCounterMode\nfrom typing import Union,Tuple\nimport torchvision\n\ndef get_flops(model, inp: Union[torch.Tensor, Tuple], with_backward=False):\n    \n    istrain = model.training\n    model.eval()\n    \n    inp = inp if isinstance(inp, torch.Tensor) else torch.randn(inp)\n\n    flop_counter = FlopCounterMode(mods=model, display=False, depth=None)\n    with flop_counter:\n        if with_backward:\n            model(inp).sum().backward()\n        else:\n            model(inp)\n    total_flops =  flop_counter.get_total_flops()\n    if istrain:\n        model.train()\n    return total_flops\n\n\nfrom torchvision.models import resnet18\n\nmodel = resnet18()\n\nget_flops(model, (1, 3, 224, 224))", "cmd_opts": " --cell_id=NONE -s", "import_complete": 1, "terminal": "nvimterm"}